---
import Button from "../../components/component/AfterIconButton.astro";
import PictureFrame from "../../components/component/PictureFrame.astro";

interface Props {
  image: {
    url: string;
    alt: string;
  };
  text: string;
  access: {
    companyName: string;
    postalCode: string;
    address: string;
    phoneNumber: string;
    faxNumber: string;
  };
  buttonText: string;
}

const { image, text, access, buttonText } = Astro.props;
---

<div class="media js-consultation-media-animation">
  <div class="media__container">
    <div class="media__primary-block">
      <div class="media__image">
        <PictureFrame url={image.url} alt={image.alt} />
      </div>
      <p class="media__text">{text}</p>
    </div>
    <div class="media__secondary-block">
      <div class="media__access">
        <p class="media__company-name">{access.companyName}</p>
        <p class="media__postal-code">{access.postalCode}</p>
        <p class="media__address">{access.address}</p>
        <address class="media__contact">
          <a href="tel:+" class="media__phone-number">{access.phoneNumber}</a>
          <span class="media__fax-number">{access.faxNumber}</span>
        </address>
      </div>
      <div class="media__button">
        <Button text={buttonText} />
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  .media {
  }

  .media__container {
    display: block grid;
    grid-template-areas:
      "primary-block access"
      "button button";
    grid-template-columns: 144fr 226fr;
    column-gap: calc(10 * var(--rem-ratio));

    @container (min-width: 600px) {
      grid-template-areas: "primary-block secondary-block";
      grid-template-columns: 460fr 530fr;
    }
  }

  .media__primary-block {
    grid-area: primary-block;
  }

  .media__image {
    max-inline-size: calc(120 / 144 * 100%);

    @container (min-width: 600px) {
      max-inline-size: revert;
    }
    :global(img) {
      object-fit: cover;
      aspect-ratio: 1;

      @container (min-width: 600px) {
        aspect-ratio: revert;
      }
    }
  }

  .media__text {
    font-size: var(--font-size-12-20);
    line-height: var(--line-height-12-15);
    word-break: keep-all;
    margin-block-start: calc(10 * var(--rem-ratio));

    @include global.mq() {
      line-height: var(--line-height-20-24);
    }

    @container (min-width: 600px) {
      margin-block-start: calc(18 * var(--rem-ratio));
    }
  }

  .media__secondary-block {
    display: contents;
    grid-area: secondary-block;

    @container (min-width: 600px) {
      display: block flow;
    }
  }

  .media__access {
    grid-area: access;
    text-align: center;
    font-size: var(--font-size-20-30);
    line-height: var(--line-height-20-24);

    @include global.mq() {
      line-height: var(--line-height-30-36);
    }
  }

  .media__company-name {
  }

  .media__postal-code {
    margin-block-start: 1lh;
  }

  .media__address {
  }

  .media__contact {
    margin-block-start: 1lh;
  }

  .media__phone-number {
    display: block flow;
  }

  .media__fax-number {
    display: block flow;
  }

  .media__button {
    grid-area: button;
    margin-block-start: calc(10 * var(--rem-ratio));
    text-align: center;

    @container (min-width: 600px) {
      margin-block-start: calc(36 * var(--rem-ratio));
    }
  }
</style>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.utils
    .toArray<HTMLElement>(".js-consultation-media-animation")
    .forEach((item) => {
      gsap.fromTo(
        item,
        {
          y: 20,
          autoAlpha: 0,
        },
        {
          y: 0,
          autoAlpha: 1,
          scrollTrigger: {
            trigger: item,
            toggleActions: "play none none reverse",
            start: "top 90%",
            // markers: true,
          },
        },
      );
    });
</script>
