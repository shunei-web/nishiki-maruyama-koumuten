---
import PictureFrame from "@components/component/PictureFrame.astro";

interface Props {
  title: string;
  thumbnail: {
    url: string;
    alt: string;
  };
  description: string;
}

const { title, thumbnail, description } = Astro.props;
---

<article class="card js-works-card-animation">
  <div class="card__container">
    <h3 class="card__title">{title}</h3>
    <div class="card__thumbnail">
      <PictureFrame url={thumbnail.url} alt={thumbnail.alt} />
    </div>
    <p class="card__description">{description}</p>
  </div>
</article>

<style lang="scss">
  .card {
  }

  .card__container {
    display: block grid;
    grid-template-areas:
      "title title"
      "thumbnail description";
    grid-template-columns: 110fr 265fr;
    gap: calc(5 * var(--rem-ratio));

    @container (min-width: 600px) {
      grid-template-areas:
        "title"
        "thumbnail"
        "description";
      grid-template-columns: revert;
    }
  }

  .card__title {
    grid-area: title;
    font-size: var(--font-size-20-30);
    font-weight: 400;
    line-height: var(--line-height-20-24);

    @include global.mq {
      line-height: var(--line-height-30-36);
    }
  }

  .card__thumbnail {
    grid-area: thumbnail;

    :global(img) {
      aspect-ratio: calc(110 / 100);
      object-fit: cover;

      @container (min-width: 600px) {
        aspect-ratio: calc(((1000 - (10 * 2)) / 3) / 203);
      }
    }
  }

  .card__description {
    grid-area: description;
    font-size: var(--font-size-15-20);
    line-height: var(--line-height-15-18);

    @include global.mq {
      line-height: var(--line-height-20-24);
    }
  }
</style>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.utils
    .toArray<HTMLElement>(".js-works-card-animation")
    .forEach((item) => {
      gsap.fromTo(
        item,
        {
          y: 20,
          autoAlpha: 0,
        },
        {
          y: 0,
          autoAlpha: 1,
          scrollTrigger: {
            trigger: item,
            toggleActions: "play none none reverse",
            start: "top 90%",
            // markers: true,
          },
        },
      );
    });
</script>
