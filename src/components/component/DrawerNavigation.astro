---
interface Props {
  menus: {
    name: string;
    url: string;
  }[];
}

const { menus } = Astro.props;
---

<nav
  id="js-drawer"
  class="drawer-navigation"
  data-drawer-animation="fade-in-activate"
>
  <div class="drawer-navigation__container">
    <div class="drawer-navigation__menu">
      {
        menus.map((item) => (
          <a href={`${item.url}`} class="drawer-navigation__link">
            {item.name}
          </a>
        ))
      }
    </div>
  </div>
</nav>

<label
  for="js-hamburger"
  class="drawer-navigation__overlay"
  data-overlay-animation="fade-in-activate"></label>

<style lang="scss">
  .drawer-navigation {
  }

  .drawer-navigation__container {
    padding-block: calc(10 * var(--rem-ratio)) calc(20 * var(--rem-ratio));
    background-color: var(--color-white);

    @include global.mq() {
      padding-block: revert;
    }
  }

  .drawer-navigation__menu {
    display: block grid;
    row-gap: calc((41 - 10) * var(--rem-ratio));
    max-inline-size: calc(377 * var(--rem-ratio));
    margin-inline: auto;

    @include global.mq() {
      display: block flex;
      column-gap: calc(40 * var(--rem-ratio));
      max-inline-size: revert;
    }
  }

  .drawer-navigation__link {
    text-align: center;
    font-size: var(--font-size-30);
    line-height: var(--line-height-30-36);
    padding-block: calc(10 * var(--rem-ratio));

    @include global.mq() {
      font-size: var(--font-size-20-30-bp);
      padding-block: calc((80 - 36) / 2 * var(--rem-ratio));
    }
  }

  .drawer-navigation__overlay {
    position: fixed;
    inset-block: calc(var(--header-block-size) * var(--rem-ratio)) 0;
    inset-inline: 0;
    z-index: var(--z-background);
  }
</style>
