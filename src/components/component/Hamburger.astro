---

---

<button
  type="button"
  class="hamburger"
  id="js-hamburger"
  data-scroll-target="hamburger"
  data-scroll-animation="fade-in-activate"
>
  <span class="hamburger__icon">
    <span></span>
    <span></span>
    <span></span>
  </span>
</button>

<style lang="scss">
  .hamburger {
    --_button-size: 80;
    --_transition-duration: 0.5s;

    position: relative;
    display: block flow;
    inline-size: calc(var(--_button-size) * var(--rem-ratio));
    aspect-ratio: 1;
  }

  .hamburger__icon {
    --_inline-size: 50;
    --_block-size: 35;
    --_border-width: 5;
    --_cross-rotate: 45deg;
    --_x-rotate: 180deg;

    display: block grid;
    grid-template-areas:
      "bar1"
      "bar2"
      "bar3";
    place-content: space-between center;
    block-size: calc(var(--_block-size) * var(--rem-ratio));
    transition-timing-function: var(--ease-out-sine);
    transition-duration: var(--_transition-duration);
    transition-property: rotate;

    &:where(.hamburger.is-active *) {
      rotate: 1 0 0 var(--_x-rotate);
    }

    span {
      inline-size: calc(var(--_inline-size) * var(--rem-ratio));
      block-size: calc(var(--_border-width) * var(--rem-ratio));
      background: var(--color-hamburger);
      transition-timing-function: var(--ease-out-sine);
      transition-duration: var(--_transition-duration);
      transition-property: background-color, opacity, rotate;

      &:where(.hamburger.is-active *) {
        &:nth-of-type(1) {
          opacity: 0;
        }

        &:nth-of-type(2) {
          rotate: z calc(var(--_cross-rotate) * -1);
          translate: 0
            calc(((var(--_border-width) / 2) / 2) * var(--rem-ratio) * -1);
        }

        &:nth-of-type(3) {
          rotate: z var(--_cross-rotate);
          translate: 0
            calc(
              ((var(--_block-size) - var(--_border-width)) / 2) *
                var(--rem-ratio) * -1
            );
        }
      }

      &:nth-of-type(1) {
        grid-area: bar1;
      }

      &:nth-of-type(2) {
        grid-area: bar2;
      }

      &:nth-of-type(3) {
        grid-area: bar3;
      }
    }
  }
</style>
