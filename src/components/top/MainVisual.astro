---
import PictureFrame from "../../components/component/PictureFrame.astro";

interface Image {
  url: string;
  alt: string;
}

const images: Image[] = [
  { url: "/src/assets/main-visual-1.png", alt: "メインビジュアル1" },
  { url: "/src/assets/main-visual-2.png", alt: "メインビジュアル2" },
  { url: "/src/assets/main-visual-3.png", alt: "メインビジュアル3" },
];
---

<div class="section">
  <div class="inner">
    <div class="content">
      <hgroup class="heading">
        <h2 class="heading__main">安全安心な家づくり</h2>
        <p class="heading__sub">
          長く住む家だからこそ、<br />安全と快適を追求。<br
          />理想の住まいをつくります。
        </p>
      </hgroup>

      <div class="slider js-main-visual-slider">
        <!-- Slider main container -->
        <div class="swiper">
          <!-- Additional required wrapper -->
          <div class="swiper-wrapper">
            <!-- Slides -->
            {
              images.map((image) => (
                <div class="swiper-slide">
                  <PictureFrame url={image.url} alt={image.alt} />
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  .section {
    position: relative;
    margin-block-start: calc(10 * var(--rem-ratio));

    @include global.mq() {
      padding-block: calc(10 * var(--rem-ratio));
      background: var(--color-ground-gray);
      z-index: var(--z-background);
    }
  }

  .inner {
  }

  .content {
  }

  .heading {
    position: absolute;
    inset-block-end: calc(14 / 324 * 100%);
    inset-inline-start: calc(118 / 450 * 100%);
    padding: calc(10 * var(--rem-ratio));
    background: var(--color-ground-light-transparent);

    @include global.mq() {
      inset-block-end: calc(31 / 580 * 100%);
      inset-inline-start: calc(618 / 1440 * 100%);
      padding-block: calc(22.5 * var(--rem-ratio));
      padding-inline: calc(49.5 * var(--rem-ratio));
    }
  }

  .heading__main {
    font-size: var(--font-size-30-48);
    line-height: var(--line-height-30-36);
    font-weight: 400;
    max-inline-size: fit-content;
    margin-inline: auto;

    @include global.mq() {
      line-height: var(--line-height-48-58);
    }
  }

  .heading__sub {
    font-size: var(--font-size-20-32);
    line-height: var(--line-height-20-24);
    margin-block-start: calc(20 * var(--rem-ratio));
    max-inline-size: fit-content;
    margin-inline: auto;

    @include global.mq() {
      line-height: var(--line-height-32-39);
    }
  }

  .slider {
    position: relative;
    z-index: var(--z-background);
    block-size: max(
      calc((324 - 10) * var(--rem-ratio)),
      calc(100dvb - (var(--header-block-size) + 10) * var(--rem-ratio))
    );

    @include global.mq() {
      block-size: max(
        calc((324 - 10) * var(--rem-ratio)),
        calc(
          100dvb - (var(--header-block-size) + 10 + 10 * 2) * var(--rem-ratio)
        )
      );
    }
  }

  .swiper {
    block-size: 100%;
  }

  .swiper-wrapper {
  }

  .swiper-slide {
    :global(img) {
      object-fit: cover;
      block-size: 100%;
    }
  }
</style>

<script>
  import Swiper from "swiper/bundle";
  import type { SwiperOptions } from "swiper/types";
  import "swiper/css/bundle";

  const sliders = document.querySelectorAll<HTMLElement>(
    ".js-main-visual-slider .swiper",
  );

  const initSwiper = (slider: HTMLElement): Swiper => {
    const swiperOptions: SwiperOptions = {
      effect: "fade",
      fadeEffect: {
        crossFade: true,
      },
      loop: true,
      loopAdditionalSlides: 0,
      speed: 4000,
      autoplay: {
        delay: 8000,
        disableOnInteraction: false,
        waitForTransition: false,
      },
      watchSlidesProgress: true,
      followFinger: false,
      allowTouchMove: false,
    };

    return new Swiper(slider, swiperOptions);
  };

  sliders?.forEach((slider) => {
    initSwiper(slider);
  });
</script>
