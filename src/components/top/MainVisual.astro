---
import PictureFrame from "@components/component/PictureFrame.astro";
import Section from "@layouts/Section.astro";

interface Image {
  url: string;
  alt: string;
}

const images: Image[] = [
  { url: "/src/assets/main-visual-1.png", alt: "メインビジュアル1" },
  { url: "/src/assets/main-visual-2.png", alt: "メインビジュアル2" },
  { url: "/src/assets/main-visual-3.png", alt: "メインビジュアル3" },
];
---

<Section>
  <div class="main-visual">
    <hgroup class="heading">
      <h2 class="heading__main">安全安心な家づくり</h2>
      <p class="heading__sub">
        長く住む家だからこそ、<br />安全と快適を追求。<br
        />理想の住まいをつくります。
      </p>
    </hgroup>

    <div class="slider js-main-visual-slider">
      <!-- Slider main container -->
      <div class="swiper">
        <!-- Additional required wrapper -->
        <div class="swiper-wrapper">
          <!-- Slides -->
          {
            images.map((image) => (
              <div class="swiper-slide">
                <PictureFrame url={image.url} alt={image.alt} />
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</Section>

<style lang="scss">
  .main-visual {
    position: relative;
    margin-block: calc(-20 * var(--rem-ratio)) calc(-10 * var(--rem-ratio));
  }

  .heading {
    @include global.clamp(--_inset-inline-end, 7, 71);
    @include global.clamp(--_padding-block, 10, 22.5);
    @include global.clamp(--_padding-inline, 10, 49.5);

    position: absolute;
    inset-block-end: calc(14 / 324 * 100%);
    inset-inline-end: var(--_inset-inline-end);
    padding-block: var(--_padding-block);
    padding-inline: var(--_padding-inline);
    background: var(--color-ground-light-transparent);

    @include global.mq {
      inset-block-end: calc(31 / 580 * 100%);
    }
  }

  .heading__main {
    max-inline-size: fit-content;
    margin-inline: auto;
    font-size: var(--font-size-30-48);
    font-weight: 400;
    line-height: var(--line-height-30-36);

    @include global.mq {
      line-height: var(--line-height-48-58);
    }
  }

  .heading__sub {
    max-inline-size: fit-content;
    margin-block-start: calc(20 * var(--rem-ratio));
    margin-inline: auto;
    font-size: var(--font-size-20-32);
    line-height: var(--line-height-20-24);

    @include global.mq {
      line-height: var(--line-height-32-39);
    }
  }

  .slider {
    position: relative;
    z-index: var(--z-background);
    block-size: max(
      calc((324 - 10) * var(--rem-ratio)),
      calc(100dvb - (var(--header-block-size) + 10) * var(--rem-ratio))
    );
    margin-inline: calc(50% - 50dvi);
    background: var(--color-ground-gray);

    @include global.mq {
      block-size: max(
        calc(324 * var(--rem-ratio)),
        calc(100dvb - (var(--header-block-size) + 10) * var(--rem-ratio))
      );
      padding-block: calc(10 * var(--rem-ratio));
    }
  }

  .swiper {
    block-size: 100%;
  }

  .swiper-wrapper {
  }

  .swiper-slide {
    :global(img) {
      block-size: 100%;
      object-fit: cover;
    }
  }
</style>

<script>
  import Swiper from "swiper/bundle";
  import "swiper/css/bundle";
  import type { SwiperOptions } from "swiper/types";

  const sliders = document.querySelectorAll<HTMLElement>(
    ".js-main-visual-slider .swiper",
  );

  const initSwiper = (slider: HTMLElement): Swiper => {
    const swiperOptions: SwiperOptions = {
      effect: "fade",
      fadeEffect: {
        crossFade: true,
      },
      loop: true,
      loopAdditionalSlides: 0,
      speed: 4000,
      autoplay: {
        delay: 8000,
        disableOnInteraction: false,
        waitForTransition: false,
      },
      watchSlidesProgress: true,
      followFinger: false,
      allowTouchMove: false,
    };

    return new Swiper(slider, swiperOptions);
  };

  sliders?.forEach((slider) => {
    initSwiper(slider);
  });
</script>
